<?php
/**
 * Created by PhpStorm.
 * User: rxw
 * Date: 17-9-16
 * Time: 下午8:48
 */
namespace framework\server;

use framework\base\Container;

class HttpServer extends BaseServer
{
    protected function init()
    {
        $this->_server = new \swoole_http_server($this->_appConf['ip'], $this->_appConf['port']);
        parent::init(); // TODO: Change the autogenerated stub
        $this->onRequest();
    }

    protected function onRequest()
    {
        $this->_server->on("request", function (\swoole_http_request $request,\swoole_http_response $response)
        {
            if (DEBUG)
            {
                ob_start();
            }

            if (!empty($this->_event))
            {
                $this->_event->onRequest($request,$response);
            }
            $container = Container::getInstance();
            if (!empty($request->get)) {
                $_GET = $request->get;
            }
            if (!empty($request->post)) {
                $_POST = $request->post;
            }
            if (!empty($request->files)) {
                $_FILES = $request->files;
//                $container->getComponent('upload')->save('file'); 上传文件测试
            }

            $hasEnd = false;
            try
            {
                if (!empty($this->_event))
                {
                    $this->_event->onResponse($request,$response);
                }
                $request->server['host'] = $request->header['host'];
                $urlInfo = $container->getComponent('url')->run($request->server);
                if ($urlInfo !== false) {
                    $result = $container->getComponent('dispatcher')->run($urlInfo);
                    $hasEnd = $container->getComponent('response')->send($response, $result);
                    unset($result);
                }
            }
            catch (\Exception $exception)
            {
                $code = $exception->getCode() > 0 ? $exception->getCode() : 404;
                $response->status($code);
                if (DEBUG) {
                    $response->write($exception->getMessage());
                }
                $container->getComponent('exception')->handleException($exception);
            }
            catch (\Error $e)
            {
                $code = $e->getCode() > 0 ? $e->getCode() : 500;
                $response->status($code);
                if (DEBUG) {
                    $response->write($e->getMessage());
                }
                $container->getComponent('exception')->handleException($e);
            }
            if (!$hasEnd)
            {
                $response->end();
            }
            $_GET = null;
            $_POST = null;
            $_FILES = null;
            $container->finish();
            unset($container,$request,$response);
        });
    }
}